.TH JEDI 1 jedi\-0.4.4
.SH NAME
jedi \- J's EDItor
.SH SYNOPSIS
.B jedi
.RB [options] \ [files]
.SH DESCRIPTION
jedi is a text editor written in ruby for the unix console.  It is
designed to be portable and hackable.


.SH OPTIONS
For each command-line flag, the equivalent configuration script code
is shown.

.TP
.B \-v
Prints version information to standard output, then exits.

.TP
.B \-h
Prints usage information

.TP
.B \-s --script FILE
Runs the named script file on startup.  All code will be run by the
ruby interpreter in the scope of the main text editor class.

	run_script(FILE)

.TP
.B \-P --portable
Turns on portable mode. Jedi will not search for startup scripts
or save history in a history file. Options specified after this
can overwrite these changes.

.TP
.B \-t --tabsize N
Sets the tab character display width to N spaces.

	$tabsize = Hash.new(N)

.TP
.B \-T --tabchar C
Sets the tab character to C.  Whenever the tab key is entered, the
character C is inserted into the text buffer.

	$tabchar = Hash.new(C)

.TP
.B \-a --no-autoindent
Turn off autoindent.

	$autoindent = Hash.new(false)

.TP
.B \-A --autoindent
Turn on autoindent.

	$autoindent = Hash.new(true)

.TP
.B \-y --save-hist FILE
Save command/search/etc history in file FILE.

	$histories_file = FILE

.TP
.B \-e --no-edit
Start in view/navigation mode.

	$editmode = Hash.new(:view)

.TP
.B \-E --edit
Start in edit mode [Default]

	$editmode = Hash.new(:edit)

.TP
.B \-w --no-linewrap
Turn off line-wrapping.

	$linewrap = Hash.new(false)

.TP
.B \-W --linewrap
Turn on line-wrapping.

	$linewrap = Hash.new(true)

.TP
.B \-c --no-color
Turn off syntax coloring.

	$syntax_color = Hash.new(false)

.TP
.B \-C --color
Turn on syntax coloring.

	$syntax_color = Hash.new(true)

.TP
.B \-m --no-mouse
Turn off mouse interaction. [Default]

	$mouse = false

.TP
.B \-M --mouse
Turn on mouse interaction.

	$mouse = true

.TP
.B \-b --no-backups
Disable backup file. [Default]

	$backups = Hash.new(false)

.TP
.B \-B --backups
Enable backup file.

	$backup_prefix = '.~'

	$backups = Hash.new($backup_prefix)

.TP
.B \-z --disable-suspend
Ignore the suspend keypress. Useful when running in a non-unix
enviroment, which has no job control.

	$suspend = false

.TP
.B [files]
List of files to open.


.SH USAGE
.SS Keyboard commands

The keyboard commands are numerous, and change depending on state. This
section describes some of the basic editing commands.  See the user
manual for more complex interactions.

.TP
.B C\-q
Close the current file, and exit the editor if all files are closed.

.TP
.B C\-x
Mark text for copy/paste.

.TP
.B C\-k
Cut marked text (or current line if text is unmarked).

.TP
.B C\-p
Copy marked text (or current line if text is unmarked).

.TP
.B C\-u
Paste copied text.

.TP
.B S\-ARROW
Shift the screen up/down/left/right

.TP
.B C\-LEFT C\-RIGHT
Undo/redo

.TP
.B C\-S\-LEFT/RIGHT
Macroscopic undo/redo: jumps between saved snapshots. Snapshots are
made whenever the file is saved.

.TP
.B C\-o
Save file.

.TP
.B C\-n C\-b
Switch to next/previous open file.

.TP
.B C\-f
Open a new file for editing.

.TP
.B C\-t
Toggle. Subsequently, hit 'tab' to see toggle options.

.TP
.B C\-6
Extramode.  Subsequently, hit 'tab' to see additional commands.

.TP
.B C\-s
Enter a ruby command to be run in the scope of the text buffer.

.TP
.B C\-a C\-e
Go to start/end of the line.

.TP
.B C\-w C\-r
Search and search/replace.

.TP
.B C\-g
Go to line number.


.SH MORE INFORMATION
.TP
See the manual (http://github.com/wx13/jedi) for more details.

.SH CUSTOMIZATION
jedi is customized through startup scripts.  Almost the entire editor
can be modified through a startup script, because ruby supports
meta-programming.


.SH AUTHOR
jedi is written by Jason DeVita <jason@wx13.com>
